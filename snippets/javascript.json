{
  "Route (file)": {
    "isFileTemplate": true,
    "prefix": ["g-route"],
    "body": [
      "import Route from '@ember/routing/route';",
      "",
      "export default class ${0} extends Router {",
      "  queryParams = {",
      "    // foo: { refreshModel: true } ",
      "  }",
      "",
      "  async beforeModel(/* transition */) {}",
      "  async model(/* params, transition */) {}",
      "  async afterModel(/* model, transition */) {}",
      "}"
    ]
  },
  "Route w/ Router (file)": {
    "isFileTemplate": true,
    "prefix": ["g-route"],
    "body": [
      "import Route from '@ember/routing/route';",
      "import { service } from '@ember/service';",
      "",
      "export default class ${0} extends Router {",
      "  @service router;",
      "",
      "  queryParams = {",
      "    // foo: { refreshModel: true } ",
      "  }",
      "",
      "  async beforeModel(/* transition */) {}",
      "  async model(/* params, transition */) {}",
      "  async afterModel(/* model, transition */) {}",
      "}"
    ]
  },
  "Service (file)": {
    "isFileTemplate": true,
    "prefix": ["g-route"],
    "body": [
      "import Service from '@ember/service';",
      "",
      "export default class ${0} extends Service {",
      "  ${1}",
      "}"
    ]
  },
  "Unit Test (file)": {
    "isFileTemplate": true,
    "prefix": ["g-unit-test", "Unit Test", "test"],
    "body": [
      "import { module, test } from 'qunit';",
      "import { setupTest } from 'ember-qunit';",
      "",
      "module('Unit | ${1}', function (hooks) {",
      "  setupTest(hooks);",
      "",
      "  test('${2}', async function (assert) {",
      "    assert.ok('true', 'we did it');",
      "  });",
      "});"
    ]
  },
  "Application Test (file)": {
    "isFileTemplate": true,
    "prefix": ["g-application-test", "Application Test", "test"],
    "body": [
      "import { module, test } from 'qunit';",
      "import { setupApplicationTest } from 'ember-qunit';",
      "import { visit } from '@ember/test-helpers';",
      "",
      "module('Application | ${1}', function (hooks) {",
      "  setupApplicationTest(hooks);",
      "",
      "  test('${2}', async function (assert) {",
      "    await visit('/some/location');",
      "",
      "    assert.dom().hasText('content to test here');",
      "  });",
      "});"
    ]
  }
}
